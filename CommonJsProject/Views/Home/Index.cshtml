@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <style>
        div {
            border: 1px solid red;
            padding: 5px;
        }
    </style>
    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <script>
        var h = "var p=[];p.push('<div id=\"calendar\" class=\"calendar\">    <div id=\"calendar_title_containter\" class=\"calendar_title_containter\">');p.push(model.title);p.push('</div>    <div id=\"calendar_title_containter\" class=\"calendar_title_containter\">        ');if(model.data.exist == \"true\")        {p.push('        <div>');p.push(model.data.exist);p.push('+\":\" + ');p.push(model.data.data);p.push('</div>        ');}        else        {p.push('        <div>0:0</div>        ');}p.push('        ');for(var i = 0; i < model.msg.length;i++){p.push('        <div>');p.push(i);p.push(',');p.push(model.msg[i].msg1);p.push(',');p.push(model.msg[i].msg2);p.push('</div>        ');}p.push('    </div>    <div id=\"calendar_title_containter\" class=\"calendar_title_containter\">        <div>');p.push(model.msg[0].msg1);p.push('"</div>    </div></div>"');";

        
    var fn = new Function(h);

    var _s = 0;

    
           
    </script>
</head>
<body>


</body>
</html>
<script>

    (function () {
        var cache = {};

    this.tmpl = function tmpl(str, data) {
        // Figure out if we're getting a template, or if we need to
        // load the template - and be sure to cache the result.
        var fn = !/\W/.test(str) ?
            cache[str] = cache[str] ||
            tmpl(document.getElementById(str).innerHTML) :

            // Generate a reusable function that will serve as a template
            // generator (and which will be cached).
            new Function("obj",
                "var p=[],print=function(){p.push.apply(p,arguments);};" +

                // Introduce the data as local variables using with(){}
                "with(obj){p.push('" +
                // Convert the template into pure JavaScript
                str
                .replace(/[\r\t\n]/g, " ")
                .split("<%").join("\t")
                .replace(/((^|%>)[^\t]*)'/g, "$1\r")
                .replace(/\t=(.*?)%>/g, "',$1,'")
                .split("\t").join("');")
                .split("%>").join("p.push('")
                .split("\r").join("\\'")
                + "');}" + "return p.join('');");

        // Provide some basic currying to the user
        return data ? fn(data) : fn;
    };
    })();

    function M1(obj,str) {
        var p = [],
            print = function() { p.push.apply(p, arguments); };
        with (obj) {
            p.push(str
                .replace(/[\r\t\n]/g, " ")
                .split("<%").join("\t")
                .replace(/((^|%>)[^\t]*)'/g, "$1\r")
                .replace(/\t=(.*?)%>/g, "',$1,'")
                .split("\t").join("');")
                .split("%>").join("p.push('")
                .split("\r").join("\\'"));
        }
        return p.join('');
    }
</script>

